library restlib.core.http.headers;

import "http.dart";
import "http.internal.dart";

const Header ACCEPT = const HeaderImpl("accept", "Accept");
const Header ACCEPT_CHARSET = const HeaderImpl("accept-charset", "Accept-Charset");
const Header ACCEPT_ENCODING = const HeaderImpl("accept-encoding", "Accept-Encoding");
const Header ACCEPT_LANGUAGE = const HeaderImpl("accept-language", "Accept-Language");
const Header ACCEPT_RANGES = const HeaderImpl("accept-ranges", "Accept-Ranges");
const Header AGE = const HeaderImpl("age", "Age");
const Header ALLOW = const HeaderImpl("allow", "Allow");
const Header AUTHORIZATION = const HeaderImpl("authorization", "Authorization");
const Header CACHE_CONTROL = const HeaderImpl("cache-control", "Cache-Control");
const Header CONNECTION = const HeaderImpl("connection", "Connection");
const Header CONTENT_ENCODING = const HeaderImpl("content-encoding", "Content-Encoding");
const Header CONTENT_LANGUAGE = const HeaderImpl("content-language", "Content-Language");
const Header CONTENT_LENGTH = const HeaderImpl("content-length", "Content-Length");
const Header CONTENT_LOCATION = const HeaderImpl("content-location","Content-Location");
const Header CONTENT_MD5 = const HeaderImpl("content-md5", "Content-MD5");
const Header CONTENT_RANGE = const HeaderImpl("content-range", "Content-Range");
const Header CONTENT_TYPE = const HeaderImpl("content-type", "Content-Type");
const Header COOKIE = const HeaderImpl("cookie", "Cookie");
const Header DATE = const HeaderImpl("date", "Date");
const Header ENTITY_TAG = const HeaderImpl("etag", "ETag");
const Header EXPECT = const HeaderImpl("expect", "Expect");
const Header EXPIRES = const HeaderImpl("expires", "Expires");
const Header FROM = const HeaderImpl("from", "From");
const Header HOST = const HeaderImpl("host", "Host");
const Header IF_MATCH = const HeaderImpl("if-match", "If-Match");
const Header IF_MODIFIED_SINCE = const HeaderImpl("if-modified-since", "If-Modified-Since");
const Header IF_NONE_MATCH = const HeaderImpl("if-none-match", "If-None-Match");
const Header IF_RANGE = const HeaderImpl("if-range", "If-Range");
const Header IF_UNMODIFIED_SINCE = const HeaderImpl("if-unmodified-since", "If-Unmodified-Since");
const Header LAST_MODIFIED = const HeaderImpl("last-modified", "Last-Modified");
const Header LOCATION = const HeaderImpl("location", "Location");
const Header MAX_FORWARDS = const HeaderImpl("max-forwards", "Max-Forwards");
const Header PRAGMA = const HeaderImpl("pragma", "Pragma");
const Header PROXY_AUTHENTICATE = const HeaderImpl("proxy-authenticat", "Proxy-Authenticate");
const Header PROXY_AUTHORIZATION = const HeaderImpl("proxy-authorization", "Proxy-Authorization");
const Header RANGE = const HeaderImpl("range", "Range");
const Header REFERER = const HeaderImpl("referer","Referer");
const Header RETRY_AFTER = const HeaderImpl("retry-after", "Retry-After");
const Header SERVER = const HeaderImpl("server", "Server");
const Header SET_COOKIE = const HeaderImpl("set-cookie", "Set-Cookie");
const Header TE = const HeaderImpl("te", "TE");
const Header TRAILER = const HeaderImpl("trailer", "Trailer");
const Header TRANSFER_ENCODING = const HeaderImpl("transfer-encoding", "Transfer-Encoding");
const Header UPGRADE = const HeaderImpl("upgrade", "Upgrade");
const Header USER_AGENT = const HeaderImpl("user-agent", "User-Agent");
const Header VARY = const HeaderImpl("vary", "Vary");
const Header VIA = const HeaderImpl("via", "Via");
const Header WARNING = const HeaderImpl("warning", "Warning");
const Header WWW_AUTHENTICATE = const HeaderImpl("www-authenticate", "WWW-Authenticate");

// Extension Headers
const Header X_HTTP_METHOD = const HeaderImpl("x-http-method", "X-HTTP-Method");
const Header X_HTTP_METHOD_OVERRIDE = const HeaderImpl("x-http-method-override", "X-HTTP-Method-Override");
const Header X_METHOD_OVERRIDE  = const HeaderImpl("x-method-override", "X-Method-Override");